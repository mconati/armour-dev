classdef manual_waypoint_HLP < high_level_planner
    % Class: manual_waypoint_HLP < high_level_planner
    %
    % A high-level planner that takes in a list of manually-generated
    % waypoints as its manual_waypoints property. At runtime, when its
    % HLP.get_waypoints method is called, it returns a waypoint along the
    % piecewise straight-line path described by the list of manual
    % waypoints. Each waypoint is generated by seeing how far along the
    % path the agent is (using agent_info.position), and adding a lookahead
    % distance to that distance.
    %
    % Author: Shreyas Kousik
    % Created: 26 Jan 2020
    % Updated: --
    
    %% properties
    properties
        manual_waypoints
        manual_waypoint_distances
    end
    
    %% methods
    methods
        %% constructor
        function HLP = manual_waypoint_HLP(varargin)
            HLP@high_level_planner(varargin{:}) ;
        end
        
        %% setup
        function setup(HLP,agent_info,world_info)
            % call superclass
            setup@high_level_planner(HLP,agent_info,world_info) ;
            
            % act like straight line planner if manual_waypoints is empty
            if isempty(HLP.manual_waypoints)
                HLP.manual_waypoints = [world_info.start, world_info.goal] ;
            end
            
            % make sure the last manual waypoint is the goal
            g = HLP.goal ;
            if vecnorm(HLP.manual_waypoints(:,end) - g) > 0
                HLP.vdisp('Adding goal as final waypoint!',3)
                HLP.manual_waypoints = [HLP.manual_waypoints, g] ;
            end
            
            % set up the waypoint distances
            HLP.manual_waypoint_distances = dist_polyline_cumulative(HLP.manual_waypoints) ;
        end
        
        %% get waypoint
        function waypoint = get_waypoint(HLP,agent_info,~,lookahead_distance)
            if nargin < 4
                lookahead_distance = HLP.default_lookahead_distance ;
            end
            
            % get agent's position on the path of the manual waypoints
            z = agent_info.position(:,end) ;
            d = dist_point_on_polyline(z,HLP.manual_waypoints) ;
            
            % get distance for interpolation
            d_wp = HLP.manual_waypoint_distances ;
            d_lkhd = min(d + lookahead_distance, d_wp(end)) ;
            
            % get waypoint
            waypoint = match_trajectories(d_lkhd,d_wp,HLP.manual_waypoints) ;
            
            % update waypoint history
            HLP.current_waypoint = waypoint ;
            HLP.waypoints = [HLP.waypoints, waypoint] ;
            HLP.current_waypoint_index = HLP.current_waypoint_index + 1 ;
        end
    end
end